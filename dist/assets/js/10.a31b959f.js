(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{616:function(s,t,a){s.exports=a.p+"assets/img/bibao.0f6856d5.png"},617:function(s,t,a){s.exports=a.p+"assets/img/bibao1.b6a871fc.png"},652:function(s,t,a){"use strict";a.r(t);var n=a(3),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("由于"),n("RouterLink",{attrs:{to:"/know/js/js_address.html"}},[s._v("js地址引用")]),s._v("文章而顺带记录js中的闭包原理\n")],1)]),s._v(" "),n("h2",{attrs:{id:"_1-闭包概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-闭包概念"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1. 闭包概念")])]),s._v(" "),n("ul",[n("li",[s._v("它是一种保护机制，保护里边的变量不受外界的影响")]),s._v(" "),n("li",[s._v("函数执行，形成一个私有作用域，这个私有作用域就是闭包")]),s._v(" "),n("li",[s._v("不销毁的私有作用域才是闭包")]),s._v(" "),n("li",[s._v("能够带来私有作用域的好处，也能产生堆垃圾")])]),s._v(" "),n("h2",{attrs:{id:"_2-闭包形成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-闭包形成"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2. 闭包形成")])]),s._v(" "),n("ul",[n("li",[s._v("一个函数执行时，内部定义的变量在普遍情况下会在结束函数后销毁")]),s._v(" "),n("li",[s._v("但是如果在函数内部中出现了栈的引用，函数执行的步骤就不能被销毁")]),s._v(" "),n("li",[s._v("函数销毁会导致栈中的引用丢失")]),s._v(" "),n("li",[s._v("通俗点就是函数套函数，就能形成闭包")])]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("fun")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("在以上方法"),n("code",[s._v("fun()")]),s._v("中，如果没有"),n("code",[s._v("fun()")]),s._v("的重新引用，正常执行每次变量"),n("code",[s._v("a")]),s._v("会重新销毁再申明\n"),n("img",{attrs:{src:a(616),alt:"avatar"}})]),s._v(" "),n("ul",[n("li",[s._v("但是在函数内部对本身进行重新引用至新的堆地址，将本身重定义")]),s._v(" "),n("li",[s._v("在函数的第一次执行之后本身就被指向原方法地址中的一个新地址")]),s._v(" "),n("li",[s._v("由此就导致原方法中的"),n("code",[s._v("a")]),s._v("变量没被销毁，并且能够被新的"),n("code",[s._v("fun()")]),s._v("向上查找找到")]),s._v(" "),n("li",[s._v("并且变量"),n("code",[s._v("a")]),s._v("又不会污染外部参数，"),n("code",[s._v("a")]),s._v("就成为了"),n("code",[s._v("fun()")]),s._v("的私有变量\n"),n("img",{attrs:{src:a(617),alt:"avatar"}})])]),s._v(" "),n("p",[s._v("闭包的形成方式不一定要对自身重新定义")]),s._v(" "),n("p",[s._v("返回值的方式一样可行，但为了防止销毁需要栈中变量引用")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" fun2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("执行"),n("code",[s._v("fun2()")]),s._v("与原先的"),n("code",[s._v("fun()")]),s._v("是一致的效果")]),s._v(" "),n("h2",{attrs:{id:"_3-作用域销毁问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-作用域销毁问题"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3. 作用域销毁问题")])]),s._v(" "),n("h3",{attrs:{id:"栈内存销毁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈内存销毁"}},[s._v("#")]),s._v(" 栈内存销毁")]),s._v(" "),n("p",[s._v("销毁，当这个作用域没有用处时，就销毁；没有用：跟外界没有任何关系了，就是外部不调用栈内存里面代码，变量时，栈内存销毁；")]),s._v(" "),n("h3",{attrs:{id:"私有作用域销毁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#私有作用域销毁"}},[s._v("#")]),s._v(" 私有作用域销毁")]),s._v(" "),n("p",[s._v("函数执行完成之后，看这个作用域是否还有用处，别的地方是否调用私有作用域里面的代码，变量，没有用就直接销毁")]),s._v(" "),n("h3",{attrs:{id:"全局作用域销毁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域销毁"}},[s._v("#")]),s._v(" 全局作用域销毁")]),s._v(" "),n("p",[s._v("只有在关闭页面的时候销毁")]),s._v(" "),n("h3",{attrs:{id:"垃圾回收机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[s._v("#")]),s._v(" 垃圾回收机制")]),s._v(" "),n("p",[s._v("谷歌 采用 计时查询的方式， 定期查询一遍，把没有被占用的堆内存销毁\nIE和火狐 采用 计数的方式； 当有一个变量占用这个地址时 我就计数加一；当有有一个变量不再占用这个堆内存，我就计数减一")])])}),[],!1,null,null,null);t.default=r.exports}}]);