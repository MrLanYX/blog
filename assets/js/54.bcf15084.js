(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{707:function(v,t,_){"use strict";_.r(t);var e=_(3),s=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("第一篇 了解什么是状态管理，为什么要使用vuex来实现\n")]),v._v(" "),_("h2",{attrs:{id:"_1-什么是-状态管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-状态管理"}},[v._v("#")]),v._v(" "),_("strong",[v._v("1. 什么是'状态管理'")])]),v._v(" "),_("p",[_("code",[v._v("Vue.js")]),v._v("通过vuex对应用整体进行组件之间的状态管理")]),v._v(" "),_("p",[v._v("即管理的数据改变，产生状态改变，状态改变影响对此状态有需求的多个视图（多个组件）")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[v._v("这里只做简单描述，具体细节可直接前往"),_("a",{attrs:{href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[v._v("vuex官网"),_("OutboundLink")],1)])]),_("h2",{attrs:{id:"_1-1-单向数据流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单向数据流"}},[v._v("#")]),v._v(" 1.1 单向数据流")]),v._v(" "),_("p",[v._v("在Vue.js 应用程序中：")]),v._v(" "),_("p",[v._v("数据改变形成状态改变 → 状态改变影响视图 → 用户操控视图改变数据")]),v._v(" "),_("p",[v._v("以此形成“单向数据流”理念，如下图")]),v._v(" "),_("img",{staticStyle:{height:"310px",width:"450px"},attrs:{src:"https://vuex.vuejs.org/flow.png",alt:"单向数据流.png"}}),v._v(" "),_("h2",{attrs:{id:"_1-2-单向数据流管理状态的弊端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-单向数据流管理状态的弊端"}},[v._v("#")]),v._v(" 1.2 单向数据流管理状态的弊端")]),v._v(" "),_("p",[v._v("单向数据流在单组件中拥有很好的逻辑方式，即便是父子组件或是个别跨组件管理也很方便")]),v._v(" "),_("p",[v._v("但是：")]),v._v(" "),_("ul",[_("li",[v._v("一旦视图之间的逻辑关系复杂")]),v._v(" "),_("li",[v._v("数据改变没有之前单一，存在多个视图影响数据")])]),v._v(" "),_("p",[v._v("状态管理就会逐渐变得繁琐，尤其是兄弟组件，未加载的组件传递状态就变得复杂")]),v._v(" "),_("h2",{attrs:{id:"_1-3-将状态管理抽离"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-将状态管理抽离"}},[v._v("#")]),v._v(" 1.3 将状态管理抽离")]),v._v(" "),_("p",[v._v("过于复杂的状态管理：")]),v._v(" "),_("ul",[_("li",[v._v("繁琐的改变数据方式")]),v._v(" "),_("li",[v._v("多个视图组件受影响")])]),v._v(" "),_("p",[v._v("完全可以把组件的共享状态抽取出来，以一个全局单例模式管理，类似与事件总线。")]),v._v(" "),_("p",[v._v("只不过比起事件总线要能够拥有更简单的响应方式进行状态与视图的双向触发。")]),v._v(" "),_("p",[v._v("在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为！")]),v._v(" "),_("img",{attrs:{src:"https://vuex.vuejs.org/vuex.png",alt:"vuex"}}),v._v(" "),_("p",[v._v("vuex形成一个中心，为各个组件提供获取参数、改变参数、监听变化等基本能力")]),v._v(" "),_("h2",{attrs:{id:"_2-vuex运用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-vuex运用场景"}},[v._v("#")]),v._v(" "),_("strong",[v._v("2. VueX运用场景")])]),v._v(" "),_("p",[v._v("vuex在没有合理利用的情况下是繁琐冗余的，在应用过于简单的情况下不建议使用")]),v._v(" "),_("p",[v._v("使用场景：")]),v._v(" "),_("ul",[_("li",[v._v("大型单页面应用")]),v._v(" "),_("li",[v._v("权限框架应用")]),v._v(" "),_("li",[v._v("过多的页面通讯等等...")])]),v._v(" "),_("p",[v._v("vuex能够在组件之外更好的管理大家（组件）都需要的数据，当您考虑到这一点就是需要使用的时候")])])}),[],!1,null,null,null);t.default=s.exports}}]);